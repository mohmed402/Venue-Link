.container {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin: 20px 0;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 15px;
  border-bottom: 2px solid #f0f0f0;
}

.header h3 {
  margin: 0;
  color: #800020;
  font-size: 18px;
  font-weight: 600;
}

.controls {
  display: flex;
  gap: 15px;
  align-items: center;
}

.controls label {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  color: #555;
}

.durationSelect,
.modeSelect {
  padding: 6px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
  background: white;
}

.modeSelect {
  min-width: 200px;
}

.legend {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
  padding: 10px;
  background: #f8f9fa;
  border-radius: 6px;
}

.legendItem {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
}

.legendColor {
  width: 16px;
  height: 16px;
  border-radius: 3px;
}

.gridContainer {
  overflow-x: auto;
  border: 1px solid #e0e0e0;
  border-radius: 6px;
  scroll-behavior: smooth;
}

.grid {
  display: grid;
  min-width: 1200px;
  position: relative;
  user-select: none;
  contain: layout style paint;
}

.cornerCell {
  background: #800020;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  font-size: 14px;
  border-right: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}

.timeHeader {
  background: #f8f9fa;
  border-right: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: 500;
  color: #666;
  padding: 5px;
  min-height: 40px;
}

.venueHeader {
  background: #f8f9fa;
  border-right: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  padding: 10px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 60px;
}

.venueName {
  font-weight: 600;
  font-size: 14px;
  color: #333;
  margin-bottom: 2px;
}

.venueType {
  font-size: 12px;
  color: #666;
  text-transform: capitalize;
}

.timeSlot {
  border-right: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  min-height: 60px;
  cursor: pointer;
  transition: background-color 0.1s ease, transform 0.1s ease;
  position: relative;
  user-select: none;
  will-change: background-color, transform;
}

.timeSlot:hover {
  background-color: #f0f8ff;
  transform: scale(1.01);
}

.timeSlot.available {
  background-color: white;
}

.timeSlot.currentSelection {
  background-color: #e8f5e8;
}

.timeSlot.clickSelection {
  background-color: #e3f2fd;
  border: 2px solid #2196F3;
  position: relative;
}

.timeSlot.dragSelected {
  background-color: #e3f2fd !important;
  border: 2px solid #2196F3;
  box-shadow: inset 0 0 0 1px #2196F3;
  transform: scale(1.02);
  transition: none;
  position: relative;
}

.bookingBlock {
  position: relative;
  z-index: 10;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  color: white;
  font-size: 12px;
  font-weight: 600;
  text-align: center;
  will-change: transform;
  pointer-events: none;
}

.bookingBlock:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

.bookingBlock.booking {
  background: linear-gradient(135deg, #2196F3, #1976D2);
  color: white;
}

.bookingBlock.pending {
  background: linear-gradient(135deg, #FF9800, #F57C00);
  color: white;
}

.bookingBlock.cancelled {
  background: linear-gradient(135deg, #F44336, #D32F2F);
  color: white;
  opacity: 0.7;
}

.bookingBlock.maintenance {
  background: linear-gradient(135deg, #424242, #212121);
  color: white;
}

.bookingBlock.buffer {
  background: linear-gradient(135deg, #9E9E9E, #757575);
  color: white;
}

.bookingBlock.currentSelection {
  background: linear-gradient(135deg, #4CAF50, #388E3C);
  color: white;
  border: 2px solid #2E7D32;
  animation: pulse 2s infinite;
  pointer-events: all !important;
  cursor: grab !important;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(76, 175, 80, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
  }
}

.bookingText {
  font-size: 12px;
  font-weight: 500;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}

.eventType {
  font-size: 10px;
  opacity: 0.9;
  margin-top: 2px;
  font-weight: 400;
}

.legendColor.booking {
  background: linear-gradient(135deg, #2196F3, #1976D2);
}

.legendColor.pending {
  background: linear-gradient(135deg, #FF9800, #F57C00);
}

.legendColor.cancelled {
  background: linear-gradient(135deg, #F44336, #D32F2F);
  opacity: 0.7;
}

.legendColor.maintenance {
  background: linear-gradient(135deg, #424242, #212121);
}

.legendColor.buffer {
  background: linear-gradient(135deg, #9E9E9E, #757575);
}

.legendColor.currentSelection {
  background: linear-gradient(135deg, #4CAF50, #388E3C);
}

.timeRange {
  font-size: 9px;
  opacity: 0.8;
  margin-top: 1px;
  font-weight: 300;
}

/* Responsive design */
@media (max-width: 768px) {
  .header {
    flex-direction: column;
    gap: 15px;
    align-items: flex-start;
  }
  
  .legend {
    flex-wrap: wrap;
    gap: 10px;
  }
  
  .controls {
    flex-direction: column;
    gap: 10px;
    align-items: flex-start;
  }
  
  .grid {
    min-width: 800px;
  }
  
  .timeHeader,
  .venueHeader {
    font-size: 11px;
  }
  
  .bookingText {
    font-size: 11px;
  }
  
  .eventType {
    font-size: 9px;
  }
}

/* Loading state */
.loading {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 200px;
  color: #666;
  gap: 16px;
}

.loadingSpinner {
  width: 32px;
  height: 32px;
  border: 3px solid #f3f3f3;
  border-top: 3px solid #800020;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Empty state */
.emptyState {
  text-align: center;
  padding: 40px;
  color: #666;
}

.emptyState h4 {
  margin-bottom: 10px;
  color: #800020;
}

/* Time slot hover effects */
.timeSlot.available:hover {
  background-color: #e3f2fd;
}

.timeSlot.booking:hover {
  background-color: #bbdefb;
}

.timeSlot.maintenance:hover {
  background-color: #f5f5f5;
}

.timeSlot.buffer:hover {
  background-color: #e0e0e0;
}

/* Drag selection styles */
.dragPreview {
  position: relative;
  z-index: 15;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  background: linear-gradient(135deg, #4CAF50, #388E3C);
  color: white;
  border: 2px solid #2E7D32;
  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.4);
  animation: newSelectionPulse 0.8s ease-in-out infinite alternate;
  will-change: transform, opacity;
}

@keyframes newSelectionPulse {
  0% {
    transform: scale(1);
    opacity: 0.9;
  }
  100% {
    transform: scale(1.01);
    opacity: 1;
  }
}

.dragPreviewText {
  font-size: 12px;
  font-weight: 600;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  pointer-events: none;
}

/* Real-time selection preview */
.selectionPreview {
  position: fixed;
  top: 20px;
  right: 20px;
  background: white;
  border: 2px solid #2196F3;
  border-radius: 12px;
  padding: 16px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 1000;
  min-width: 280px;
  animation: slideIn 0.2s ease-out;
  will-change: transform;
  pointer-events: none;
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.previewHeader {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 12px;
  color: #1976D2;
  font-size: 16px;
}

.previewIcon {
  font-size: 18px;
}

.previewDetails {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.previewVenue {
  font-size: 14px;
  font-weight: 600;
  color: #333;
  padding: 4px 8px;
  background: #f5f5f5;
  border-radius: 6px;
}

.previewTime {
  font-size: 18px;
  font-weight: 700;
  color: #1976D2;
  text-align: center;
  padding: 8px;
  background: #e3f2fd;
  border-radius: 8px;
}

.previewDuration {
  font-size: 12px;
  color: #666;
  text-align: center;
  font-style: italic;
}

.previewHint {
  font-size: 10px;
  color: rgba(255, 255, 255, 0.9);
  text-align: center;
  font-style: italic;
  margin-top: 2px;
  padding: 2px 4px;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 2px;
}

/* Enhanced cursor feedback */
.timeSlot.available {
  cursor: crosshair;
}

.timeSlot.available:hover {
  background-color: #e3f2fd;
  transform: scale(1.01);
  box-shadow: 0 1px 3px rgba(33, 150, 243, 0.2);
}

/* Disable selection during drag */
.grid * {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

/* Enhanced draggable current selection block */
.draggableBlock {
  position: relative;
  cursor: grab !important; /* Force grab cursor */
  display: flex;
  align-items: center;
  border: 2px solid #4CAF50;
  background: linear-gradient(135deg, #66BB6A, #4CAF50);
  transition: all 0.2s ease;
  overflow: visible;
  margin: 0 8px;
  pointer-events: all !important; /* Enable pointer events */
}

.draggableBlock:hover {
  transform: scale(1.02);
  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
  border-color: #388E3C;
  cursor: grab !important; /* Ensure grab cursor on hover */
}

.draggableBlock:active,
.draggableBlock.moving {
  cursor: grabbing !important; /* Show grabbing cursor when dragging */
  opacity: 0.7; /* Make original block semi-transparent during move */
  transform: scale(0.95); /* Slightly shrink the original */
}

.draggableBlock.isDragging {
  opacity: 0.8;
  transform: scale(1.05);
  z-index: 20;
  box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
}

/* Override bookingBlock pointer events for current selection */
.bookingBlock.currentSelection.draggableBlock {
  pointer-events: all !important;
  cursor: grab !important;
}

.bookingBlock.currentSelection.draggableBlock:hover {
  cursor: grab !important;
}

.bookingBlock.currentSelection.draggableBlock:active {
  cursor: grabbing !important;
}

/* Block content area */
.blockContent {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 16px;
  pointer-events: none;
  margin: 0 12px;
}

/* Enhanced resize handles for better draggability */
.resizeHandle {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 24px;
  background: rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: col-resize;
  transition: all 0.2s ease;
  border-radius: 6px;
  z-index: 15;
  border: 2px solid rgba(255, 255, 255, 0.3);
  pointer-events: all !important;
  
  /* Add a subtle glow to make handles more visible */
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.1);
}

/* Optimized right handle for smoother dragging */
.rightHandle {
  right: -4px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: none;
  cursor: e-resize !important;
  /* Optimize for dragging performance */
  will-change: transform, right, width;
  transform: translateZ(0); /* Force hardware acceleration */
}

.rightHandle:hover {
  right: -6px;
  /* Smoother transitions for right handle */
  transition: all 0.15s ease-out;
}

.rightHandle:active,
.rightHandle.dragging {
  right: -10px !important;
  /* Disable transitions during drag for immediate response */
  transition: none !important;
}

/* Enhanced performance for dragging state */
.resizeHandle.dragging {
  background: rgba(33, 150, 243, 0.4) !important;
  border-color: #2196F3 !important;
  width: 32px !important;
  transform: scaleY(1.4) translateZ(0) !important; /* Add hardware acceleration */
  box-shadow: 0 6px 16px rgba(33, 150, 243, 0.6) !important;
  z-index: 20 !important;
  /* Disable transitions during drag */
  transition: none !important;
}

/* Left handle optimizations for consistency */
.leftHandle {
  left: -4px;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: none;
  cursor: w-resize !important;
  will-change: transform, left, width;
  transform: translateZ(0);
}

.leftHandle:hover {
  left: -6px;
  transition: all 0.15s ease-out;
}

.leftHandle:active,
.leftHandle.dragging {
  left: -10px !important;
  transition: none !important;
}

/* Enhanced handle grip indicators */
.handleGrip {
  color: white;
  font-size: 16px;
  font-weight: bold;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
  user-select: none;
  pointer-events: none;
  transition: all 0.2s ease;
}

.resizeHandle:hover .handleGrip {
  transform: scale(1.3);
  color: #FFD54F;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
}

.resizeHandle:active .handleGrip {
  transform: scale(1.4);
  color: #FFC107;
}

/* Visual feedback when dragging handles */
.draggableBlock.resizing .resizeHandle {
  background: rgba(33, 150, 243, 0.3);
  border-color: #2196F3;
  animation: handlePulse 0.6s ease-in-out infinite alternate;
}

@keyframes handlePulse {
  0% {
    transform: scaleY(1.1);
    box-shadow: 0 2px 8px rgba(33, 150, 243, 0.3);
  }
  100% {
    transform: scaleY(1.3);
    box-shadow: 0 4px 12px rgba(33, 150, 243, 0.5);
  }
}

/* Special cursor states for handles */
.leftHandle {
  cursor: w-resize !important;
}

.rightHandle {
  cursor: e-resize !important;
}

/* Ensure handles are always clickable */
.resizeHandle {
  pointer-events: all !important;
}

/* Enhanced time range display */
.timeRange {
  font-size: 10px;
  font-weight: 500;
  opacity: 0.9;
  margin-top: 2px;
}

/* Drag feedback states */
.draggableBlock.resizing {
  border-style: dashed;
  animation: resizePulse 1s ease-in-out infinite alternate;
}

.draggableBlock.moving {
  border-style: dotted;
  animation: movePulse 1s ease-in-out infinite alternate;
}

@keyframes resizePulse {
  0% {
    border-color: #4CAF50;
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4);
  }
  100% {
    border-color: #2196F3;
    box-shadow: 0 0 0 4px rgba(33, 150, 243, 0.2);
  }
}

@keyframes movePulse {
  0% {
    border-color: #4CAF50;
    transform: scale(1.02);
  }
  100% {
    border-color: #FF9800;
    transform: scale(1.05);
  }
}

/* Cursor feedback for different drag operations */
.draggableBlock.resize-start {
  cursor: w-resize;
}

.draggableBlock.resize-end {
  cursor: e-resize;
}

.draggableBlock.move {
  cursor: move;
}

/* Enhanced booking block base styles */
.bookingBlock {
  position: relative;
  z-index: 10;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  color: white;
  font-size: 12px;
  font-weight: 600;
  text-align: center;
  will-change: transform;
  pointer-events: none;
}

/* Enhanced current selection with clear draggable indicators */
.currentSelection {
  background: linear-gradient(135deg, #66BB6A, #4CAF50);
  border: 2px solid #388E3C;
  color: white;
  font-weight: 700;
  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.3);
  pointer-events: all !important;
  cursor: grab !important;
  transition: all 0.2s ease;
}

.currentSelection:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.4);
  border-color: #2E7D32;
  cursor: grab !important;
}

.currentSelection:active {
  cursor: grabbing !important;
  transform: scale(0.98);
}

/* Add a subtle animation to indicate it's interactive */
.currentSelection::after {
  content: '✋';
  position: absolute;
  top: -8px;
  right: -8px;
  font-size: 14px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: dragHint 2s ease-in-out infinite;
  opacity: 0.8;
}

@keyframes dragHint {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
}

/* Prevent text selection during drag operations */
.draggableBlock * {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

/* Enhanced drag preview styles for different operations */
.movePreview {
  position: relative;
  z-index: 25;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  background: linear-gradient(135deg, #FF9800, #F57C00);
  color: white;
  border: 2px dashed #E65100;
  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.4);
  animation: movePulse 0.8s ease-in-out infinite alternate;
  will-change: transform, opacity;
  opacity: 0.9;
}

.resizePreview {
  position: relative;
  z-index: 25;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  background: linear-gradient(135deg, #2196F3, #1976D2);
  color: white;
  border: 2px dashed #1565C0;
  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.4);
  animation: resizePulse 0.8s ease-in-out infinite alternate;
  will-change: transform, opacity;
}

.previewTimeRange {
  font-size: 10px;
  font-weight: 500;
  margin-top: 2px;
  opacity: 0.9;
}

/* Enhanced handle hover effects */
.resizeHandle:hover .handleGrip {
  transform: scale(1.2);
  color: #FFD54F;
}

.leftHandle:hover .handleGrip {
  animation: bounceLeft 0.6s ease-in-out infinite alternate;
}

.rightHandle:hover .handleGrip {
  animation: bounceRight 0.6s ease-in-out infinite alternate;
}

@keyframes bounceLeft {
  0% { transform: translateX(0); }
  100% { transform: translateX(-2px); }
}

@keyframes bounceRight {
  0% { transform: translateX(0); }
  100% { transform: translateX(2px); }
}

/* Improved draggable block states */
.draggableBlock.moving {
  border-style: dotted;
  border-color: #FF9800;
  background: linear-gradient(135deg, #FFB74D, #FF9800);
  animation: movePulse 1s ease-in-out infinite alternate;
  opacity: 0.7; /* Make original block semi-transparent during move */
  transform: scale(0.95); /* Slightly shrink the original */
}

.draggableBlock.resizing {
  border-style: dashed;
  border-color: #2196F3;
  background: linear-gradient(135deg, #64B5F6, #2196F3);
  animation: resizePulse 1s ease-in-out infinite alternate;
}

/* Tooltip-style feedback */
.dragFeedback {
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 11px;
  white-space: nowrap;
  z-index: 30;
  pointer-events: none;
}

/* Enhanced selection preview panel */
.selectionPreview {
  position: fixed;
  top: 20px;
  right: 20px;
  background: white;
  border: 2px solid #2196F3;
  border-radius: 12px;
  padding: 16px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 1000;
  min-width: 280px;
  animation: slideIn 0.2s ease-out;
  will-change: transform;
  pointer-events: none;
}

.selectionPreview.moving {
  border-color: #FF9800;
}

.selectionPreview.resizing {
  border-color: #2196F3;
}

.selectionPreview.clickMode {
  border-color: #28a745;
  background: rgba(40, 167, 69, 0.05);
}



/* Click mode cursor styles */
.timeSlot.available {
  cursor: crosshair;
}

/* Click selection mode - different cursor when selecting */
.container.clickMode .timeSlot.available {
  cursor: pointer;
}

.container.clickMode .timeSlot.available:hover {
  background-color: rgba(40, 167, 69, 0.1);
  border: 1px dashed #28a745;
}

/* Click selection dots */
.clickSelectionDot {
  position: relative;
  z-index: 15;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  width: 100%;
  height: 100%;
}

.clickDot {
  font-size: 24px;
  color: #2196F3;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  animation: clickDotPulse 1s ease-in-out infinite alternate;
}

@keyframes clickDotPulse {
  0% {
    transform: scale(1);
    opacity: 0.8;
  }
  100% {
    transform: scale(1.2);
    opacity: 1;
  }
}

/* Enhanced click selection time slots */
.timeSlot.clickSelection {
  background-color: #e3f2fd !important;
  border: 2px solid #2196F3 !important;
  position: relative;
  transform: scale(1.02);
  box-shadow: 0 2px 8px rgba(33, 150, 243, 0.3);
}

/* Enhanced handle states */
.resizeHandle.dragging {
  background: rgba(33, 150, 243, 0.4) !important;
  border-color: #2196F3 !important;
  width: 32px !important;
  transform: scaleY(1.4) translateZ(0) !important; /* Add hardware acceleration */
  box-shadow: 0 6px 16px rgba(33, 150, 243, 0.6) !important;
  z-index: 20 !important;
  /* Disable transitions during drag */
  transition: none !important;
}

.resizeHandle.dragging .handleGrip {
  transform: scale(1.5) !important;
  color: #FFC107 !important;
  text-shadow: 0 3px 6px rgba(0, 0, 0, 0.8) !important;
  animation: gripPulse 0.4s ease-in-out infinite alternate;
}

@keyframes gripPulse {
  0% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1.7);
  }
}

/* Enhanced handle positioning during drag */
.leftHandle.dragging {
  left: -10px !important;
}

.rightHandle.dragging {
  right: -10px !important;
}

/* Improved handle visibility */
.resizeHandle {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 24px;
  background: rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: col-resize;
  transition: all 0.2s ease;
  border-radius: 6px;
  z-index: 15;
  border: 2px solid rgba(255, 255, 255, 0.3);
  pointer-events: all !important;
  
  /* Add a subtle glow to make handles more visible */
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.1);
}

/* General resize handle hover state */
.resizeHandle:hover {
  background: rgba(0, 0, 0, 0.25);
  width: 28px;
  transform: scaleY(1.1) translateZ(0);
  border-color: rgba(255, 255, 255, 0.5);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2), 0 0 0 2px rgba(255, 255, 255, 0.2);
  transition: all 0.15s ease-out;
}

/* Active state for all handles */
.resizeHandle:active {
  background: rgba(33, 150, 243, 0.3);
  border-color: #2196F3;
  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.4), 0 0 0 3px rgba(33, 150, 243, 0.2);
}

/* Cursor improvements */
.leftHandle {
  cursor: w-resize !important;
}

.rightHandle {
  cursor: e-resize !important;
}

/* Prevent interference with block dragging */
.draggableBlock {
  position: relative;
  cursor: move;
  display: flex;
  align-items: center;
  border: 2px solid #4CAF50;
  background: linear-gradient(135deg, #66BB6A, #4CAF50);
  transition: all 0.2s ease;
  overflow: visible;
  margin: 0 8px;
}

/* Block content spacing */
.blockContent {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 16px;
  pointer-events: none;
  margin: 0 12px;
}

/* Special indicator for resize target slot */
.timeSlot.dragSelected::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  background: #2196F3;
  border-radius: 50%;
  animation: targetPulse 0.6s ease-in-out infinite alternate;
}

@keyframes targetPulse {
  0% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.5);
  }
}

/* Enhanced resize preview */
.resizePreview {
  position: relative;
  z-index: 25;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  background: linear-gradient(135deg, #2196F3, #1976D2);
  color: white;
  border: 2px dashed #1565C0;
  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.4);
  animation: resizePulse 0.8s ease-in-out infinite alternate;
  will-change: transform, opacity;
}

/* Improved resize preview hint */
.previewHint {
  font-size: 10px;
  color: rgba(255, 255, 255, 0.9);
  text-align: center;
  font-style: italic;
  margin-top: 2px;
  padding: 2px 4px;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 2px;
}

/* Enhanced move operation styles */
.movePreview {
  position: relative;
  z-index: 25;
  margin: 2px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px 8px;
  min-height: 56px;
  background: linear-gradient(135deg, #FF9800, #F57C00);
  color: white;
  border: 2px dashed #E65100;
  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.4);
  animation: movePulse 0.8s ease-in-out infinite alternate;
  will-change: transform, opacity;
  opacity: 0.9;
}

/* Enhanced draggable block for move operations */
.draggableBlock.moving {
  border-style: dotted;
  border-color: #FF9800;
  background: linear-gradient(135deg, #FFB74D, #FF9800);
  animation: movePulse 1s ease-in-out infinite alternate;
  opacity: 0.7; /* Make original block semi-transparent during move */
  transform: scale(0.95); /* Slightly shrink the original */
}

/* Drop zone indicator for available slots during move */
.timeSlot.moveTarget {
  background-color: rgba(255, 152, 0, 0.2) !important;
  border: 2px dashed #FF9800 !important;
  animation: dropZonePulse 1s ease-in-out infinite alternate;
}

@keyframes dropZonePulse {
  0% {
    background-color: rgba(255, 152, 0, 0.1);
    transform: scale(1);
  }
  100% {
    background-color: rgba(255, 152, 0, 0.3);
    transform: scale(1.02);
  }
}

/* Enhanced cursor feedback for move operations */
.draggableBlock {
  position: relative;
  cursor: grab; /* Show grab cursor initially */
  display: flex;
  align-items: center;
  border: 2px solid #4CAF50;
  background: linear-gradient(135deg, #66BB6A, #4CAF50);
  transition: all 0.2s ease;
  overflow: visible;
  margin: 0 8px;
}

.draggableBlock:active,
.draggableBlock.moving {
  cursor: grabbing; /* Show grabbing cursor when dragging */
}

/* Improved move preview text */
.movePreview .dragPreviewText {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.movePreview .previewTimeRange {
  font-size: 11px;
  font-weight: 600;
  opacity: 0.95;
}

/* Ghost effect for the original block during move */
.draggableBlock.moving::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 2px,
    rgba(255, 255, 255, 0.1) 2px,
    rgba(255, 255, 255, 0.1) 4px
  );
  border-radius: inherit;
  pointer-events: none;
} 